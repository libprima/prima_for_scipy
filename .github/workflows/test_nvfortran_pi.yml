name: Test nvfortran on Raspberry Pi

on:
  # Trigger the workflow on push or pull request
  #push:
  #pull_request:  # DANGEROUS! MUST be disabled for self-hosted runners!
  # Trigger the workflow by cron. The default time zone of GitHub Actions is UTC.
  schedule:
    - cron: '0 4 3-31/3 * *'
  # Trigger the workflow manually
  workflow_dispatch:


jobs:

  test:
    name: Run nvfortran tests
    runs-on: [self-hosted, ARM64, pi64]
    strategy:
      fail-fast: false
      matrix:
        ikind: [i2]
        solver: [cobyla, uobyqa, newuoa, bobyqa, lincoa]
        fflags: [-O1, -O2, -O3, -g, -fast]
        testdim: [small, big]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.3.0
        with:
          submodules: recursive

      - name: Miscellaneous setup
        run: bash .github/scripts/misc_setup

      - name: Conduct the test
        run: |
          cd "$ROOT_DIR"/fortran/${{ matrix.solver }} && bash ./flint --all && bash ./mlint --all
          # As of nvfotran 23.1, date_and_time() and random_number are not supported on Raspberry Pi
          # 4B. Thus we have to disable the extensive tests, trying only the simple example.
          #cd "$ROOT_DIR"/fortran/tests && export FFLAGS=${{ matrix.fflags }} && export TESTDIM=${{ matrix.testdim }} && make vtest_${{ matrix.ikind }}.${{ matrix.solver }}
          cd "$ROOT_DIR"/fortran/examples/${{ matrix.solver }} && make vtest

      - name: Store artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          path: ${{ env.TEST_DIR }}/prima/fortran/tests/test.${{ matrix.solver }}/log/*.log

      - name: Remove the test data
        run: rm -rf ${{ env.TEST_DIR }}
